// Code generated by MockGen. DO NOT EDIT.
// Source: userService.go
//
// Generated by this command:
//
//	mockgen -source=userService.go -destination=userService_mock.go -package=service
//
// Package service is a generated GoMock package.
package service

import (
	model "job-portal-api/internal/model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUserService is a mock of UserService interface.
type MockUserService struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceMockRecorder
}

// MockUserServiceMockRecorder is the mock recorder for MockUserService.
type MockUserServiceMockRecorder struct {
	mock *MockUserService
}

// NewMockUserService creates a new mock instance.
func NewMockUserService(ctrl *gomock.Controller) *MockUserService {
	mock := &MockUserService{ctrl: ctrl}
	mock.recorder = &MockUserServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserService) EXPECT() *MockUserServiceMockRecorder {
	return m.recorder
}

// UserSignup mocks base method.
func (m *MockUserService) UserSignup(userSignup model.UserSignup) (model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserSignup", userSignup)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserSignup indicates an expected call of UserSignup.
func (mr *MockUserServiceMockRecorder) UserSignup(userSignup any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserSignup", reflect.TypeOf((*MockUserService)(nil).UserSignup), userSignup)
}

// Userlogin mocks base method.
func (m *MockUserService) Userlogin(userSignin model.UserLogin) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Userlogin", userSignin)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Userlogin indicates an expected call of Userlogin.
func (mr *MockUserServiceMockRecorder) Userlogin(userSignin any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Userlogin", reflect.TypeOf((*MockUserService)(nil).Userlogin), userSignin)
}
